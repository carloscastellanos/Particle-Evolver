{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red96\green96\blue96;\red191\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 (\
s = \cf3 Server\cf2 .internal;\
\cf3 Server\cf2 .default = s;\
s.boot;\
)\
\
\
s.sendMsg(\cf4 \\b_allocRead\cf2 , 10, \cf5 "sounds/a11wlk01.wav"\cf2 );\
\
\
(\
\{\
	\cf3 var\cf2  b = 10, trate, dur;\
	trate = \cf3 MouseY\cf2 .kr(2,200,1);\
	dur = 4 / trate;\
	\cf3 TGrains\cf2 .ar(2, \cf3 Impulse\cf2 .ar(trate), b, 1, \cf3 MouseX\cf2 .kr(0,\cf3 BufDur\cf2 .kr(b)), dur, 0, 0.1, 2);\
\}.scope(zoom: 4);\
)\
\
\cf6 //////////////////////////////////////\cf2 \
\
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf7 /* IZ 030913 modified JT 09-2003\
Basic (fast) sine grains\
8 parameters: \
-frequency\
-frequency deviation\
-amplitude\
-amplitude deviation\
-duration\
-duration deviation\
-period\
-period deviation\
*/\cf0 \
\
( \cf7 // 1. boot server, load synthdef\cf0 \
s = \cf8 Server\cf0 .local;\
a = s.addr;\
s.boot;\
d = \cf8 SynthDef\cf0 (\cf9 "sinegrain01"\cf0 , \{ \cf8 arg\cf0  freq = 800, formant = 1600, pan = 0.5, amp = 0.1, dur = 0.1;\
	\cf8 Out\cf0 .ar(0, \
		\cf8 Pan2\cf0 .ar(\
		\cf8 Formant\cf0 .ar(fundfreq: freq, formfreq: formant, mul: \cf8 EnvGen\cf0 .kr(\cf8 Env\cf0 .sine(dur, amp), doneAction: 2)),\
		pan)); \
	\});\
d.load(s);\
)\
\
\
\cf7 // 3. Test a train of grains: \cf0 \
(\
\
\cf8 var\cf0  rangifyFreq, rangifyFormant, rangifyPan;\
~amp = 0.05;\
~dur = 0.05;\
\
\
\
\
rangifyFreq = \{ \cf8 arg\cf0  val;\
	\cf8 var\cf0  input, freq;\
	input = \cf8 ControlSpec\cf0 (-100, 100).unmap(val);\
	freq = \cf8 ControlSpec\cf0 (30, 500, \cf10 \\exponential\cf0 ).map(input).postln;\
\};\
\
rangifyFormant = \{\cf8 arg\cf0  val;\
	\cf8 var\cf0  input, freq;\
	input = \cf8 ControlSpec\cf0 (-50, 50).unmap(val);\
	freq = \cf8 ControlSpec\cf0 (60, 10000, \cf10 \\exponential\cf0 ).map(input).postln;\
\};\
\
\
rangifyPan = \{\cf8 arg\cf0  val;\
\cf8 var\cf0  input, panPos;\
	input = \cf8 ControlSpec\cf0 (-10, 10).unmap(val);\
	panPos = input.postln;\
\};\
\
~responder = \cf8 OSCresponder\cf0 (\cf8 nil\cf0 ,\cf10 'position'\cf0 ,\{\cf8 arg\cf0  me, you, him; \
			a.sendMsg(9, \cf9 "sinegrain01"\cf0 , -1, 0, 0,\
			0, rangifyFreq.value(him.at(2)), \
			1, \cf7 /* rangifyFreq.value(him.at(2)) + */\cf0  rangifyFormant.value(him.at(3)),\
			2, rangifyPan.value(him.at(1)),\
			3, ~amp, \
			4, ~dur);\
			\cf7 /*\
			a.sendMsg(9, "sinegrain01", -1, 0, 0,\
			0, rangify.value(him.at(2), freq_d),\
			1, amp,\
			3, dur);\
			\
				a.sendMsg(9, "sinegrain01", -1, 0, 0,\
			0, rangify.value(him.at(3), freq_d),\
			1, amp,\
			3, dur);\
			*/\cf0 \
		\cf7 // (rangify.value(per, per_d)).wait;\cf0 \
\}).add;\
\
~durResponder =  \cf8 OSCresponder\cf0 (\cf8 nil\cf0 ,\cf10 'dur'\cf0 ,\{\cf8 arg\cf0  me, you, val; \
~dur = val.at(1);\
\}).add;\
 )\
\
~responder.removeWhenDone;\
~durResponder.removeWhenDone;}